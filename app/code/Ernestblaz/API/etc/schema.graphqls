type Query {
    vendors(
        search: String,
        filter: VendorFilterInput
    ): Vendors @resolver(class: "Ernestblaz\\API\\Model\\Resolver\\Vendors")
    vendor(vendor_id: ID): VendorItem @resolver(class: "Ernestblaz\\API\\Model\\Resolver\\Vendor")
}

type Vendors {
    items_count: Int
    items: [VendorItem]
}

type VendorItem {
    vendor_id: Int
    vendor_name: String
    vendor_code: String
    upgrade_date: String
    vendor_type: Int
}

type Mutation {
    removeVendor(vendor_id: ID!): RemoveVendor @resolver(class: "Ernestblaz\\API\\Model\\Resolver\\RemoveVendor")
    addVendor(input: VendorItemInput!): AddVendor @resolver(class: "Ernestblaz\\API\\Model\\Resolver\\AddVendor")
    updateVendor(vendor_id: ID!, input: VendorItemInput!): UpdateVendor @resolver(class: "Ernestblaz\\API\\Model\\Resolver\\UpdateVendor")
}

type RemoveVendor {
    success: Boolean
}

input VendorItemInput {
    vendor_name: String
    vendor_code: String
    vendor_type: Int
}

input VendorFilterInput {
    vendor_type: FilterEqualTypeInput
    vendor_name: FilterMatchTypeInput
}

type AddVendor {
    vendor: VendorItem
}

type UpdateVendor {
    vendor: VendorItem
}

